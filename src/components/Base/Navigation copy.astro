---
import type { NavItem, NavProps } from '../types';

const {
  items,
  orientation = 'horizontal',
  className,
  ariaLabel = 'Main Navigation',
} = Astro.props as NavProps;

function renderMenuItems(items: NavItem[], level: number = 0) {
  return items.map(item => {
    const isActive = item.href === Astro.url.pathname;
    const hasChildren = Boolean(item.children?.length);
    const hasIcon = Boolean(item.icon);

    const indentClass =
      level === 0 ? '' : `ml-[calc(var(--nav-indent,1rem)*${level})]`;

    const liClass = `
      relative
      ${indentClass}
      ${hasChildren ? 'has-submenu' : ''}
    `.trim();

    const linkClass = `
      inline-flex items-center
      transition-colors duration-200
      ${isActive ? 'font-semibold text-blue-700' : 'text-blue-600 hover:text-blue-800'}
    `.trim();

    return (
      <li class={liClass}>
        <a
          href={item.href}
          class={linkClass}
          {...(isActive && { 'aria-current': 'page' })}
          {...(hasChildren && { 'aria-expanded': 'false' })}
        >
          {hasIcon && (
            <img
              src={item.icon}
              width='16'
              height='16'
              loading='lazy'
              alt=''
              class='mr-2 h-4 w-4'
            />
          )}
          <span>{item.title}</span>
          {hasChildren && (
            <svg class='ml-1 h-4 w-4' viewBox='0 0 20 20' fill='currentColor'>
              <path
                fill-rule='evenodd'
                d='M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z'
                clip-rule='evenodd'
              />
            </svg>
          )}
        </a>

        {hasChildren && (
          <ul class='mt-1 space-y-1'>
            {renderMenuItems(item.children!, level + 1)}
          </ul>
        )}
      </li>
    );
  });
}
---

<nav aria-label={ariaLabel} class={className}>
  <ul
    class:list={[
      'nav-list',
      orientation === 'horizontal'
        ? ['flex', 'flex-wrap', 'items-center', 'gap-4']
        : ['flex', 'flex-col', 'gap-2'],
      className,
    ]}
  >
    {renderMenuItems(items)}
  </ul>
</nav>
